

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Sep 30 23:25:02 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 26/03/2025 GMT
    14                           ; 
    15                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     008F                     OSCCON          equ	143	;# 
   100     0090                     OSCTUNE         equ	144	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0093                     SSPMSK          equ	147	;# 
   105     0093                     MSK             equ	147	;# 
   106     0094                     SSPSTAT         equ	148	;# 
   107     0095                     WPUB            equ	149	;# 
   108     0096                     IOCB            equ	150	;# 
   109     0097                     VRCON           equ	151	;# 
   110     0098                     TXSTA           equ	152	;# 
   111     0099                     SPBRG           equ	153	;# 
   112     009A                     SPBRGH          equ	154	;# 
   113     009B                     PWM1CON         equ	155	;# 
   114     009C                     ECCPAS          equ	156	;# 
   115     009D                     PSTRCON         equ	157	;# 
   116     009E                     ADRESL          equ	158	;# 
   117     009F                     ADCON1          equ	159	;# 
   118     0105                     WDTCON          equ	261	;# 
   119     0107                     CM1CON0         equ	263	;# 
   120     0108                     CM2CON0         equ	264	;# 
   121     0109                     CM2CON1         equ	265	;# 
   122     010C                     EEDATA          equ	268	;# 
   123     010C                     EEDAT           equ	268	;# 
   124     010D                     EEADR           equ	269	;# 
   125     010E                     EEDATH          equ	270	;# 
   126     010F                     EEADRH          equ	271	;# 
   127     0185                     SRCON           equ	389	;# 
   128     0187                     BAUDCTL         equ	391	;# 
   129     0188                     ANSEL           equ	392	;# 
   130     0189                     ANSELH          equ	393	;# 
   131     018C                     EECON1          equ	396	;# 
   132     018D                     EECON2          equ	397	;# 
   133     0000                     INDF            equ	0	;# 
   134     0001                     TMR0            equ	1	;# 
   135     0002                     PCL             equ	2	;# 
   136     0003                     STATUS          equ	3	;# 
   137     0004                     FSR             equ	4	;# 
   138     0005                     PORTA           equ	5	;# 
   139     0006                     PORTB           equ	6	;# 
   140     0007                     PORTC           equ	7	;# 
   141     0008                     PORTD           equ	8	;# 
   142     0009                     PORTE           equ	9	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000D                     PIR2            equ	13	;# 
   147     000E                     TMR1            equ	14	;# 
   148     000E                     TMR1L           equ	14	;# 
   149     000F                     TMR1H           equ	15	;# 
   150     0010                     T1CON           equ	16	;# 
   151     0011                     TMR2            equ	17	;# 
   152     0012                     T2CON           equ	18	;# 
   153     0013                     SSPBUF          equ	19	;# 
   154     0014                     SSPCON          equ	20	;# 
   155     0015                     CCPR1           equ	21	;# 
   156     0015                     CCPR1L          equ	21	;# 
   157     0016                     CCPR1H          equ	22	;# 
   158     0017                     CCP1CON         equ	23	;# 
   159     0018                     RCSTA           equ	24	;# 
   160     0019                     TXREG           equ	25	;# 
   161     001A                     RCREG           equ	26	;# 
   162     001B                     CCPR2           equ	27	;# 
   163     001B                     CCPR2L          equ	27	;# 
   164     001C                     CCPR2H          equ	28	;# 
   165     001D                     CCP2CON         equ	29	;# 
   166     001E                     ADRESH          equ	30	;# 
   167     001F                     ADCON0          equ	31	;# 
   168     0081                     OPTION_REG      equ	129	;# 
   169     0085                     TRISA           equ	133	;# 
   170     0086                     TRISB           equ	134	;# 
   171     0087                     TRISC           equ	135	;# 
   172     0088                     TRISD           equ	136	;# 
   173     0089                     TRISE           equ	137	;# 
   174     008C                     PIE1            equ	140	;# 
   175     008D                     PIE2            equ	141	;# 
   176     008E                     PCON            equ	142	;# 
   177     008F                     OSCCON          equ	143	;# 
   178     0090                     OSCTUNE         equ	144	;# 
   179     0091                     SSPCON2         equ	145	;# 
   180     0092                     PR2             equ	146	;# 
   181     0093                     SSPADD          equ	147	;# 
   182     0093                     SSPMSK          equ	147	;# 
   183     0093                     MSK             equ	147	;# 
   184     0094                     SSPSTAT         equ	148	;# 
   185     0095                     WPUB            equ	149	;# 
   186     0096                     IOCB            equ	150	;# 
   187     0097                     VRCON           equ	151	;# 
   188     0098                     TXSTA           equ	152	;# 
   189     0099                     SPBRG           equ	153	;# 
   190     009A                     SPBRGH          equ	154	;# 
   191     009B                     PWM1CON         equ	155	;# 
   192     009C                     ECCPAS          equ	156	;# 
   193     009D                     PSTRCON         equ	157	;# 
   194     009E                     ADRESL          equ	158	;# 
   195     009F                     ADCON1          equ	159	;# 
   196     0105                     WDTCON          equ	261	;# 
   197     0107                     CM1CON0         equ	263	;# 
   198     0108                     CM2CON0         equ	264	;# 
   199     0109                     CM2CON1         equ	265	;# 
   200     010C                     EEDATA          equ	268	;# 
   201     010C                     EEDAT           equ	268	;# 
   202     010D                     EEADR           equ	269	;# 
   203     010E                     EEDATH          equ	270	;# 
   204     010F                     EEADRH          equ	271	;# 
   205     0185                     SRCON           equ	389	;# 
   206     0187                     BAUDCTL         equ	391	;# 
   207     0188                     ANSEL           equ	392	;# 
   208     0189                     ANSELH          equ	393	;# 
   209     018C                     EECON1          equ	396	;# 
   210     018D                     EECON2          equ	397	;# 
   211                           
   212                           	psect	strings
   213     0003                     __pstrings:
   214     0003                     stringtab:
   215     0003                     __stringtab:
   216     0003                     stringcode:	
   217                           ;	String table - string pointers are 1 byte each
   218                           
   219     0003                     stringdir:
   220     0003  3000               	movlw	high stringdir
   221     0004  008A               	movwf	10
   222     0005  0804               	movf	4,w
   223     0006  0A84               	incf	4,f
   224     0007  0782               	addwf	2,f
   225     0008                     __stringbase:
   226     0008  3400               	retlw	0
   227     0009                     __end_of__stringtab:
   228     0009                     _ma7doan:
   229     0009  34C0               	retlw	192
   230     000A  34F9               	retlw	249
   231     000B  34A4               	retlw	164
   232     000C  34B0               	retlw	176
   233     000D  3499               	retlw	153
   234     000E  3492               	retlw	146
   235     000F  3482               	retlw	130
   236     0010  34F8               	retlw	248
   237     0011  3480               	retlw	128
   238     0012  3490               	retlw	144
   239     0013                     __end_of_ma7doan:
   240     000E                     _TMR1L          set	14
   241     000F                     _TMR1H          set	15
   242     0010                     _T1CONbits      set	16
   243     0008                     _PORTD          set	8
   244     0006                     _PORTB          set	6
   245     0088                     _TRISD          set	136
   246     0086                     _TRISB          set	134
   247                           
   248                           	psect	cinit
   249     07FC                     start_initialization:	
   250                           ; #config settings
   251                           
   252     07FC                     __initialization:
   253     07FC                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256     07FC                     __end_of__initialization:
   257     07FC  0183               	clrf	3
   258     07FD  120A  118A  2F85   	ljmp	_main	;jump to C main() function
   259                           
   260                           	psect	cstackCOMMON
   261     0070                     __pcstackCOMMON:
   262     0070                     ?_main:
   263     0070                     ?___lwdiv:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0070                     ___lwdiv@divisor:	
   267                           ; 2 bytes @ 0x0
   268                           
   269                           
   270                           ; 2 bytes @ 0x0
   271     0070                     	ds	2
   272     0072                     ___lwdiv@dividend:
   273                           
   274                           ; 2 bytes @ 0x2
   275     0072                     	ds	2
   276     0074                     ___lwdiv@quotient:
   277     0074                     ??___lwdiv:	
   278                           ; 2 bytes @ 0x4
   279                           
   280                           
   281                           ; 1 bytes @ 0x4
   282     0074                     	ds	2
   283     0076                     ___lwdiv@counter:
   284                           
   285                           ; 1 bytes @ 0x6
   286     0076                     	ds	1
   287     0077                     ?___lwmod:
   288     0077                     ___lwmod@divisor:	
   289                           ; 2 bytes @ 0x7
   290                           
   291                           
   292                           ; 2 bytes @ 0x7
   293     0077                     	ds	2
   294     0079                     ___lwmod@dividend:
   295                           
   296                           ; 2 bytes @ 0x9
   297     0079                     	ds	2
   298     007B                     ___lwmod@counter:
   299     007B                     ??___lwmod:	
   300                           ; 1 bytes @ 0xB
   301                           
   302                           
   303                           ; 1 bytes @ 0xB
   304     007B                     	ds	1
   305     007C                     main@t1:
   306     007C                     ??_main:	
   307                           ; 2 bytes @ 0xC
   308                           
   309                           
   310                           ; 1 bytes @ 0xC
   311     007C                     	ds	2
   312                           
   313                           	psect	maintext
   314     0785                     __pmaintext:	
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 36 in file "612.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  t1              2   12[COMMON] unsigned short 
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : B00/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   334 ;;      Params:         0       0       0       0       0
   335 ;;      Locals:         2       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0
   337 ;;      Totals:         2       0       0       0       0
   338 ;;Total ram usage:        2 bytes
   339 ;; Hardware stack levels required when called: 1
   340 ;; This function calls:
   341 ;;		___lwdiv
   342 ;;		___lwmod
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348     0785                     _main:	
   349                           ;psect for function _main
   350                           
   351     0785                     l695:	
   352                           ;incstack = 0
   353                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   354                           
   355     0785  1683               	bsf	3,5	;RP0=1, select bank1
   356     0786  1303               	bcf	3,6	;RP1=0, select bank1
   357     0787  0186               	clrf	6	;volatile
   358     0788  0188               	clrf	8	;volatile
   359     0789  1283               	bcf	3,5	;RP0=0, select bank0
   360     078A  1303               	bcf	3,6	;RP1=0, select bank0
   361     078B  0186               	clrf	6	;volatile
   362     078C  0188               	clrf	8	;volatile
   363     078D                     l697:
   364     078D  1490               	bsf	16,1	;volatile
   365     078E                     l699:
   366     078E  30CF               	movlw	-49
   367     078F  0590               	andwf	16,f	;volatile
   368     0790                     l701:
   369     0790  1190               	bcf	16,3	;volatile
   370     0791                     l703:
   371     0791  1410               	bsf	16,0	;volatile
   372     0792                     l705:
   373     0792  018F               	clrf	15	;volatile
   374     0793                     l707:
   375     0793  018E               	clrf	14	;volatile
   376     0794                     l709:
   377     0794  080F               	movf	15,w	;volatile
   378     0795  00FD               	movwf	main@t1+1
   379     0796  080E               	movf	14,w	;volatile
   380     0797  00FC               	movwf	main@t1
   381     0798                     l711:
   382     0798  300A               	movlw	10
   383     0799  00F7               	movwf	___lwmod@divisor
   384     079A  3000               	movlw	0
   385     079B  00F8               	movwf	___lwmod@divisor+1
   386     079C  087D               	movf	main@t1+1,w
   387     079D  00FA               	movwf	___lwmod@dividend+1
   388     079E  087C               	movf	main@t1,w
   389     079F  00F9               	movwf	___lwmod@dividend
   390     07A0  120A  118A  270B  120A  118A  	fcall	___lwmod
   391     07A5  0877               	movf	?___lwmod,w
   392     07A6  3E01               	addlw	low ((_ma7doan-__stringbase)| (0+32768))
   393     07A7  0084               	movwf	4
   394     07A8  120A  118A  2003  120A  118A  	fcall	stringdir
   395     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   396     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   397     07AF  0088               	movwf	8	;volatile
   398     07B0                     l713:
   399     07B0  300A               	movlw	10
   400     07B1  00F0               	movwf	___lwdiv@divisor
   401     07B2  3000               	movlw	0
   402     07B3  00F1               	movwf	___lwdiv@divisor+1
   403     07B4  087D               	movf	main@t1+1,w
   404     07B5  00F3               	movwf	___lwdiv@dividend+1
   405     07B6  087C               	movf	main@t1,w
   406     07B7  00F2               	movwf	___lwdiv@dividend
   407     07B8  120A  118A  2743  120A  118A  	fcall	___lwdiv
   408     07BD  0870               	movf	?___lwdiv,w
   409     07BE  0471               	iorwf	?___lwdiv+1,w
   410     07BF  1D03               	btfss	3,2
   411     07C0  2FC2               	goto	u291
   412     07C1  2FC3               	goto	u290
   413     07C2                     u291:
   414     07C2  2FC8               	goto	l717
   415     07C3                     u290:
   416     07C3                     l715:
   417     07C3  30FF               	movlw	255
   418     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   419     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   420     07C6  0086               	movwf	6	;volatile
   421     07C7  2FED               	goto	l719
   422     07C8                     l717:
   423     07C8  300A               	movlw	10
   424     07C9  00F7               	movwf	___lwmod@divisor
   425     07CA  3000               	movlw	0
   426     07CB  00F8               	movwf	___lwmod@divisor+1
   427     07CC  300A               	movlw	10
   428     07CD  00F0               	movwf	___lwdiv@divisor
   429     07CE  3000               	movlw	0
   430     07CF  00F1               	movwf	___lwdiv@divisor+1
   431     07D0  087D               	movf	main@t1+1,w
   432     07D1  00F3               	movwf	___lwdiv@dividend+1
   433     07D2  087C               	movf	main@t1,w
   434     07D3  00F2               	movwf	___lwdiv@dividend
   435     07D4  120A  118A  2743  120A  118A  	fcall	___lwdiv
   436     07D9  0871               	movf	?___lwdiv+1,w
   437     07DA  00FA               	movwf	___lwmod@dividend+1
   438     07DB  0870               	movf	?___lwdiv,w
   439     07DC  00F9               	movwf	___lwmod@dividend
   440     07DD  120A  118A  270B  120A  118A  	fcall	___lwmod
   441     07E2  0877               	movf	?___lwmod,w
   442     07E3  3E01               	addlw	low ((_ma7doan-__stringbase)| (0+32768))
   443     07E4  0084               	movwf	4
   444     07E5  120A  118A  2003  120A  118A  	fcall	stringdir
   445     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   446     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   447     07EC  0086               	movwf	6	;volatile
   448     07ED                     l719:
   449     07ED  3000               	movlw	0
   450     07EE  027D               	subwf	main@t1+1,w
   451     07EF  3064               	movlw	100
   452     07F0  1903               	skipnz
   453     07F1  027C               	subwf	main@t1,w
   454     07F2  1C03               	skipc
   455     07F3  2FF5               	goto	u301
   456     07F4  2FF6               	goto	u300
   457     07F5                     u301:
   458     07F5  2F94               	goto	l709
   459     07F6                     u300:
   460     07F6                     l721:
   461     07F6  018F               	clrf	15	;volatile
   462     07F7  018E               	clrf	14	;volatile
   463     07F8  2F94               	goto	l709
   464     07F9  120A  118A  2800   	ljmp	start
   465     07FC                     __end_of_main:
   466                           
   467                           	psect	text1
   468     070B                     __ptext1:	
   469 ;; *************** function ___lwmod *****************
   470 ;; Defined at:
   471 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  divisor         2    7[COMMON] unsigned int 
   474 ;;  dividend        2    9[COMMON] unsigned int 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  counter         1   11[COMMON] unsigned char 
   477 ;; Return value:  Size  Location     Type
   478 ;;                  2    7[COMMON] unsigned int 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         4       0       0       0       0
   487 ;;      Locals:         1       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0
   489 ;;      Totals:         5       0       0       0       0
   490 ;;Total ram usage:        5 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499     070B                     ___lwmod:	
   500                           ;psect for function ___lwmod
   501                           
   502     070B                     l673:	
   503                           ;incstack = 0
   504                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   505                           
   506     070B  0877               	movf	___lwmod@divisor,w
   507     070C  0478               	iorwf	___lwmod@divisor+1,w
   508     070D  1903               	btfsc	3,2
   509     070E  2F10               	goto	u231
   510     070F  2F11               	goto	u230
   511     0710                     u231:
   512     0710  2F3E               	goto	l691
   513     0711                     u230:
   514     0711                     l675:
   515     0711  3001               	movlw	1
   516     0712  00FB               	movwf	___lwmod@counter
   517     0713  2F1D               	goto	l681
   518     0714                     l677:
   519     0714  3001               	movlw	1
   520     0715                     u245:
   521     0715  1003               	clrc
   522     0716  0DF7               	rlf	___lwmod@divisor,f
   523     0717  0DF8               	rlf	___lwmod@divisor+1,f
   524     0718  3EFF               	addlw	-1
   525     0719  1D03               	skipz
   526     071A  2F15               	goto	u245
   527     071B                     l679:
   528     071B  3001               	movlw	1
   529     071C  07FB               	addwf	___lwmod@counter,f
   530     071D                     l681:
   531     071D  1FF8               	btfss	___lwmod@divisor+1,7
   532     071E  2F20               	goto	u251
   533     071F  2F21               	goto	u250
   534     0720                     u251:
   535     0720  2F14               	goto	l677
   536     0721                     u250:
   537     0721                     l683:
   538     0721  0878               	movf	___lwmod@divisor+1,w
   539     0722  027A               	subwf	___lwmod@dividend+1,w
   540     0723  1D03               	skipz
   541     0724  2F27               	goto	u265
   542     0725  0877               	movf	___lwmod@divisor,w
   543     0726  0279               	subwf	___lwmod@dividend,w
   544     0727                     u265:
   545     0727  1C03               	skipc
   546     0728  2F2A               	goto	u261
   547     0729  2F2B               	goto	u260
   548     072A                     u261:
   549     072A  2F31               	goto	l687
   550     072B                     u260:
   551     072B                     l685:
   552     072B  0877               	movf	___lwmod@divisor,w
   553     072C  02F9               	subwf	___lwmod@dividend,f
   554     072D  0878               	movf	___lwmod@divisor+1,w
   555     072E  1C03               	skipc
   556     072F  03FA               	decf	___lwmod@dividend+1,f
   557     0730  02FA               	subwf	___lwmod@dividend+1,f
   558     0731                     l687:
   559     0731  3001               	movlw	1
   560     0732                     u275:
   561     0732  1003               	clrc
   562     0733  0CF8               	rrf	___lwmod@divisor+1,f
   563     0734  0CF7               	rrf	___lwmod@divisor,f
   564     0735  3EFF               	addlw	-1
   565     0736  1D03               	skipz
   566     0737  2F32               	goto	u275
   567     0738                     l689:
   568     0738  3001               	movlw	1
   569     0739  02FB               	subwf	___lwmod@counter,f
   570     073A  1D03               	btfss	3,2
   571     073B  2F3D               	goto	u281
   572     073C  2F3E               	goto	u280
   573     073D                     u281:
   574     073D  2F21               	goto	l683
   575     073E                     u280:
   576     073E                     l691:
   577     073E  087A               	movf	___lwmod@dividend+1,w
   578     073F  00F8               	movwf	?___lwmod+1
   579     0740  0879               	movf	___lwmod@dividend,w
   580     0741  00F7               	movwf	?___lwmod
   581     0742                     l403:
   582     0742  0008               	return
   583     0743                     __end_of___lwmod:
   584                           
   585                           	psect	text2
   586     0743                     __ptext2:	
   587 ;; *************** function ___lwdiv *****************
   588 ;; Defined at:
   589 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  divisor         2    0[COMMON] unsigned int 
   592 ;;  dividend        2    2[COMMON] unsigned int 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  quotient        2    4[COMMON] unsigned int 
   595 ;;  counter         1    6[COMMON] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  2    0[COMMON] unsigned int 
   598 ;; Registers used:
   599 ;;		wreg, status,2, status,0
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         4       0       0       0       0
   606 ;;      Locals:         3       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0
   608 ;;      Totals:         7       0       0       0       0
   609 ;;Total ram usage:        7 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618     0743                     ___lwdiv:	
   619                           ;psect for function ___lwdiv
   620                           
   621     0743                     l647:	
   622                           ;incstack = 0
   623                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   624                           
   625     0743  01F4               	clrf	___lwdiv@quotient
   626     0744  01F5               	clrf	___lwdiv@quotient+1
   627     0745                     l649:
   628     0745  0870               	movf	___lwdiv@divisor,w
   629     0746  0471               	iorwf	___lwdiv@divisor+1,w
   630     0747  1903               	btfsc	3,2
   631     0748  2F4A               	goto	u161
   632     0749  2F4B               	goto	u160
   633     074A                     u161:
   634     074A  2F80               	goto	l669
   635     074B                     u160:
   636     074B                     l651:
   637     074B  3001               	movlw	1
   638     074C  00F6               	movwf	___lwdiv@counter
   639     074D  2F57               	goto	l657
   640     074E                     l653:
   641     074E  3001               	movlw	1
   642     074F                     u175:
   643     074F  1003               	clrc
   644     0750  0DF0               	rlf	___lwdiv@divisor,f
   645     0751  0DF1               	rlf	___lwdiv@divisor+1,f
   646     0752  3EFF               	addlw	-1
   647     0753  1D03               	skipz
   648     0754  2F4F               	goto	u175
   649     0755                     l655:
   650     0755  3001               	movlw	1
   651     0756  07F6               	addwf	___lwdiv@counter,f
   652     0757                     l657:
   653     0757  1FF1               	btfss	___lwdiv@divisor+1,7
   654     0758  2F5A               	goto	u181
   655     0759  2F5B               	goto	u180
   656     075A                     u181:
   657     075A  2F4E               	goto	l653
   658     075B                     u180:
   659     075B                     l659:
   660     075B  3001               	movlw	1
   661     075C                     u195:
   662     075C  1003               	clrc
   663     075D  0DF4               	rlf	___lwdiv@quotient,f
   664     075E  0DF5               	rlf	___lwdiv@quotient+1,f
   665     075F  3EFF               	addlw	-1
   666     0760  1D03               	skipz
   667     0761  2F5C               	goto	u195
   668     0762  0871               	movf	___lwdiv@divisor+1,w
   669     0763  0273               	subwf	___lwdiv@dividend+1,w
   670     0764  1D03               	skipz
   671     0765  2F68               	goto	u205
   672     0766  0870               	movf	___lwdiv@divisor,w
   673     0767  0272               	subwf	___lwdiv@dividend,w
   674     0768                     u205:
   675     0768  1C03               	skipc
   676     0769  2F6B               	goto	u201
   677     076A  2F6C               	goto	u200
   678     076B                     u201:
   679     076B  2F73               	goto	l665
   680     076C                     u200:
   681     076C                     l661:
   682     076C  0870               	movf	___lwdiv@divisor,w
   683     076D  02F2               	subwf	___lwdiv@dividend,f
   684     076E  0871               	movf	___lwdiv@divisor+1,w
   685     076F  1C03               	skipc
   686     0770  03F3               	decf	___lwdiv@dividend+1,f
   687     0771  02F3               	subwf	___lwdiv@dividend+1,f
   688     0772                     l663:
   689     0772  1474               	bsf	___lwdiv@quotient,0
   690     0773                     l665:
   691     0773  3001               	movlw	1
   692     0774                     u215:
   693     0774  1003               	clrc
   694     0775  0CF1               	rrf	___lwdiv@divisor+1,f
   695     0776  0CF0               	rrf	___lwdiv@divisor,f
   696     0777  3EFF               	addlw	-1
   697     0778  1D03               	skipz
   698     0779  2F74               	goto	u215
   699     077A                     l667:
   700     077A  3001               	movlw	1
   701     077B  02F6               	subwf	___lwdiv@counter,f
   702     077C  1D03               	btfss	3,2
   703     077D  2F7F               	goto	u221
   704     077E  2F80               	goto	u220
   705     077F                     u221:
   706     077F  2F5B               	goto	l659
   707     0780                     u220:
   708     0780                     l669:
   709     0780  0875               	movf	___lwdiv@quotient+1,w
   710     0781  00F1               	movwf	?___lwdiv+1
   711     0782  0874               	movf	___lwdiv@quotient,w
   712     0783  00F0               	movwf	?___lwdiv
   713     0784                     l393:
   714     0784  0008               	return
   715     0785                     __end_of___lwdiv:
   716     0002                     ___latbits      equ	2
   717     007E                     btemp           set	126	;btemp
   718     007E                     wtemp0          set	126
   719                           
   720                           	psect	config
   721                           
   722                           ;Config register CONFIG1 @ 0x2007
   723                           ;	Oscillator Selection bits
   724                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   725                           ;	Watchdog Timer Enable bit
   726                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   727                           ;	Power-up Timer Enable bit
   728                           ;	PWRTE = OFF, PWRT disabled
   729                           ;	RE3/MCLR pin function select bit
   730                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   731                           ;	Code Protection bit
   732                           ;	CP = OFF, Program memory code protection is disabled
   733                           ;	Data Code Protection bit
   734                           ;	CPD = OFF, Data memory code protection is disabled
   735                           ;	Brown Out Reset Selection bits
   736                           ;	BOREN = OFF, BOR disabled
   737                           ;	Internal External Switchover bit
   738                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   739                           ;	Fail-Safe Clock Monitor Enabled bit
   740                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   741                           ;	Low Voltage Programming Enable bit
   742                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   743                           ;	In-Circuit Debugger Mode bit
   744                           ;	DEBUG = 0x1, unprogrammed default
   745     2007                     	org	8199
   746     2007  20F2               	dw	8434
   747                           
   748                           ;Config register CONFIG2 @ 0x2008
   749                           ;	Brown-out Reset Selection bit
   750                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   751                           ;	Flash Program Memory Self Write Enable bits
   752                           ;	WRT = OFF, Write protection off
   753     2008                     	org	8200
   754     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     418
                                             12 COMMON     2     2      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     163
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     166
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      14      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Sep 30 23:25:02 2025

                      pc 0002                       fsr 0004                      l403 0742  
                    l701 0790                      l711 0798                      l703 0791  
                    l393 0784                      l721 07F6                      l713 07B0  
                    l705 0792                      l651 074B                      l715 07C3  
                    l707 0793                      l661 076C                      l653 074E  
                    l717 07C8                      l709 0794                      l663 0772  
                    l655 0755                      l647 0743                      l719 07ED  
                    l665 0773                      l657 0757                      l649 0745  
                    l681 071D                      l673 070B                      l667 077A  
                    l659 075B                      l683 0721                      l675 0711  
                    l691 073E                      l669 0780                      l685 072B  
                    l677 0714                      l687 0731                      l679 071B  
                    l695 0785                      l689 0738                      l697 078D  
                    l699 078E                      u200 076C                      u201 076B  
                    u220 0780                      u300 07F6                      u221 077F  
                    u205 0768                      u301 07F5                      u230 0711  
                    u215 0774                      u231 0710                      u160 074B  
                    u161 074A                      u250 0721                      u251 0720  
                    u180 075B                      u260 072B                      u181 075A  
                    u261 072A                      u245 0715                      u175 074F  
                    u280 073E                      u281 073D                      u265 0727  
                    u290 07C3                      u195 075C                      u275 0732  
                    u291 07C2                      fsr0 0004                     _main 0785  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of_ma7doan 0013          __end_of___lwdiv 0785          __end_of___lwmod 0743  
                  _TMR1H 000F                    _TMR1L 000E                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 007C  
              ??___lwdiv 0074                ??___lwmod 007B                   main@t1 007C  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0785  
             __stringtab 0003                  _ma7doan 0009                  ___lwdiv 0743  
                ___lwmod 070B                  __ptext1 070B                  __ptext2 0743  
              _T1CONbits 0010     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0077                __pstrings 0003         ___lwdiv@quotient 0074  
            __stringbase 0008       __end_of__stringtab 0009          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0076         ___lwmod@dividend 0079                stringcode 0003  
        ___lwmod@divisor 0077          ___lwmod@counter 007B                 stringdir 0003  
               stringtab 0003  
