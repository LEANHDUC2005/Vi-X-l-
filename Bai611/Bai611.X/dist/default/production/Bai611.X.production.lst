

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Sep 30 23:18:14 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 26/03/2025 GMT
    18                           ; 
    19                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0004                     fsr             equ	4
    52     0004                     fsr0            equ	4
    53     0000                     indf            equ	0
    54     0000                     indf0           equ	0
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0000                     INDF            equ	0	;# 
    60     0001                     TMR0            equ	1	;# 
    61     0002                     PCL             equ	2	;# 
    62     0003                     STATUS          equ	3	;# 
    63     0004                     FSR             equ	4	;# 
    64     0005                     PORTA           equ	5	;# 
    65     0006                     PORTB           equ	6	;# 
    66     0007                     PORTC           equ	7	;# 
    67     0008                     PORTD           equ	8	;# 
    68     0009                     PORTE           equ	9	;# 
    69     000A                     PCLATH          equ	10	;# 
    70     000B                     INTCON          equ	11	;# 
    71     000C                     PIR1            equ	12	;# 
    72     000D                     PIR2            equ	13	;# 
    73     000E                     TMR1            equ	14	;# 
    74     000E                     TMR1L           equ	14	;# 
    75     000F                     TMR1H           equ	15	;# 
    76     0010                     T1CON           equ	16	;# 
    77     0011                     TMR2            equ	17	;# 
    78     0012                     T2CON           equ	18	;# 
    79     0013                     SSPBUF          equ	19	;# 
    80     0014                     SSPCON          equ	20	;# 
    81     0015                     CCPR1           equ	21	;# 
    82     0015                     CCPR1L          equ	21	;# 
    83     0016                     CCPR1H          equ	22	;# 
    84     0017                     CCP1CON         equ	23	;# 
    85     0018                     RCSTA           equ	24	;# 
    86     0019                     TXREG           equ	25	;# 
    87     001A                     RCREG           equ	26	;# 
    88     001B                     CCPR2           equ	27	;# 
    89     001B                     CCPR2L          equ	27	;# 
    90     001C                     CCPR2H          equ	28	;# 
    91     001D                     CCP2CON         equ	29	;# 
    92     001E                     ADRESH          equ	30	;# 
    93     001F                     ADCON0          equ	31	;# 
    94     0081                     OPTION_REG      equ	129	;# 
    95     0085                     TRISA           equ	133	;# 
    96     0086                     TRISB           equ	134	;# 
    97     0087                     TRISC           equ	135	;# 
    98     0088                     TRISD           equ	136	;# 
    99     0089                     TRISE           equ	137	;# 
   100     008C                     PIE1            equ	140	;# 
   101     008D                     PIE2            equ	141	;# 
   102     008E                     PCON            equ	142	;# 
   103     008F                     OSCCON          equ	143	;# 
   104     0090                     OSCTUNE         equ	144	;# 
   105     0091                     SSPCON2         equ	145	;# 
   106     0092                     PR2             equ	146	;# 
   107     0093                     SSPADD          equ	147	;# 
   108     0093                     SSPMSK          equ	147	;# 
   109     0093                     MSK             equ	147	;# 
   110     0094                     SSPSTAT         equ	148	;# 
   111     0095                     WPUB            equ	149	;# 
   112     0096                     IOCB            equ	150	;# 
   113     0097                     VRCON           equ	151	;# 
   114     0098                     TXSTA           equ	152	;# 
   115     0099                     SPBRG           equ	153	;# 
   116     009A                     SPBRGH          equ	154	;# 
   117     009B                     PWM1CON         equ	155	;# 
   118     009C                     ECCPAS          equ	156	;# 
   119     009D                     PSTRCON         equ	157	;# 
   120     009E                     ADRESL          equ	158	;# 
   121     009F                     ADCON1          equ	159	;# 
   122     0105                     WDTCON          equ	261	;# 
   123     0107                     CM1CON0         equ	263	;# 
   124     0108                     CM2CON0         equ	264	;# 
   125     0109                     CM2CON1         equ	265	;# 
   126     010C                     EEDATA          equ	268	;# 
   127     010C                     EEDAT           equ	268	;# 
   128     010D                     EEADR           equ	269	;# 
   129     010E                     EEDATH          equ	270	;# 
   130     010F                     EEADRH          equ	271	;# 
   131     0185                     SRCON           equ	389	;# 
   132     0187                     BAUDCTL         equ	391	;# 
   133     0188                     ANSEL           equ	392	;# 
   134     0189                     ANSELH          equ	393	;# 
   135     018C                     EECON1          equ	396	;# 
   136     018D                     EECON2          equ	397	;# 
   137     0000                     INDF            equ	0	;# 
   138     0001                     TMR0            equ	1	;# 
   139     0002                     PCL             equ	2	;# 
   140     0003                     STATUS          equ	3	;# 
   141     0004                     FSR             equ	4	;# 
   142     0005                     PORTA           equ	5	;# 
   143     0006                     PORTB           equ	6	;# 
   144     0007                     PORTC           equ	7	;# 
   145     0008                     PORTD           equ	8	;# 
   146     0009                     PORTE           equ	9	;# 
   147     000A                     PCLATH          equ	10	;# 
   148     000B                     INTCON          equ	11	;# 
   149     000C                     PIR1            equ	12	;# 
   150     000D                     PIR2            equ	13	;# 
   151     000E                     TMR1            equ	14	;# 
   152     000E                     TMR1L           equ	14	;# 
   153     000F                     TMR1H           equ	15	;# 
   154     0010                     T1CON           equ	16	;# 
   155     0011                     TMR2            equ	17	;# 
   156     0012                     T2CON           equ	18	;# 
   157     0013                     SSPBUF          equ	19	;# 
   158     0014                     SSPCON          equ	20	;# 
   159     0015                     CCPR1           equ	21	;# 
   160     0015                     CCPR1L          equ	21	;# 
   161     0016                     CCPR1H          equ	22	;# 
   162     0017                     CCP1CON         equ	23	;# 
   163     0018                     RCSTA           equ	24	;# 
   164     0019                     TXREG           equ	25	;# 
   165     001A                     RCREG           equ	26	;# 
   166     001B                     CCPR2           equ	27	;# 
   167     001B                     CCPR2L          equ	27	;# 
   168     001C                     CCPR2H          equ	28	;# 
   169     001D                     CCP2CON         equ	29	;# 
   170     001E                     ADRESH          equ	30	;# 
   171     001F                     ADCON0          equ	31	;# 
   172     0081                     OPTION_REG      equ	129	;# 
   173     0085                     TRISA           equ	133	;# 
   174     0086                     TRISB           equ	134	;# 
   175     0087                     TRISC           equ	135	;# 
   176     0088                     TRISD           equ	136	;# 
   177     0089                     TRISE           equ	137	;# 
   178     008C                     PIE1            equ	140	;# 
   179     008D                     PIE2            equ	141	;# 
   180     008E                     PCON            equ	142	;# 
   181     008F                     OSCCON          equ	143	;# 
   182     0090                     OSCTUNE         equ	144	;# 
   183     0091                     SSPCON2         equ	145	;# 
   184     0092                     PR2             equ	146	;# 
   185     0093                     SSPADD          equ	147	;# 
   186     0093                     SSPMSK          equ	147	;# 
   187     0093                     MSK             equ	147	;# 
   188     0094                     SSPSTAT         equ	148	;# 
   189     0095                     WPUB            equ	149	;# 
   190     0096                     IOCB            equ	150	;# 
   191     0097                     VRCON           equ	151	;# 
   192     0098                     TXSTA           equ	152	;# 
   193     0099                     SPBRG           equ	153	;# 
   194     009A                     SPBRGH          equ	154	;# 
   195     009B                     PWM1CON         equ	155	;# 
   196     009C                     ECCPAS          equ	156	;# 
   197     009D                     PSTRCON         equ	157	;# 
   198     009E                     ADRESL          equ	158	;# 
   199     009F                     ADCON1          equ	159	;# 
   200     0105                     WDTCON          equ	261	;# 
   201     0107                     CM1CON0         equ	263	;# 
   202     0108                     CM2CON0         equ	264	;# 
   203     0109                     CM2CON1         equ	265	;# 
   204     010C                     EEDATA          equ	268	;# 
   205     010C                     EEDAT           equ	268	;# 
   206     010D                     EEADR           equ	269	;# 
   207     010E                     EEDATH          equ	270	;# 
   208     010F                     EEADRH          equ	271	;# 
   209     0185                     SRCON           equ	389	;# 
   210     0187                     BAUDCTL         equ	391	;# 
   211     0188                     ANSEL           equ	392	;# 
   212     0189                     ANSELH          equ	393	;# 
   213     018C                     EECON1          equ	396	;# 
   214     018D                     EECON2          equ	397	;# 
   215                           
   216                           	psect	strings
   217     0003                     __pstrings:
   218     0003                     stringtab:
   219     0003                     __stringtab:
   220     0003                     stringcode:	
   221                           ;	String table - string pointers are 1 byte each
   222                           
   223     0003                     stringdir:
   224     0003  3000               	movlw	high stringdir
   225     0004  008A               	movwf	10
   226     0005  0804               	movf	4,w
   227     0006  0A84               	incf	4,f
   228     0007  0782               	addwf	2,f
   229     0008                     __stringbase:
   230     0008  3400               	retlw	0
   231     0009                     __end_of__stringtab:
   232     0009                     _ma7doan:
   233     0009  34C0               	retlw	192
   234     000A  34F9               	retlw	249
   235     000B  34A4               	retlw	164
   236     000C  34B0               	retlw	176
   237     000D  3499               	retlw	153
   238     000E  3492               	retlw	146
   239     000F  3482               	retlw	130
   240     0010  34F8               	retlw	248
   241     0011  3480               	retlw	128
   242     0012  3490               	retlw	144
   243     0013                     __end_of_ma7doan:
   244                           
   245                           	psect	nvBANK0
   246     0020                     __pnvBANK0:
   247     0020                     _ma_dv:
   248     0020                     	ds	2
   249     0022                     _ma_ch:
   250     0022                     	ds	2
   251     0024                     _ma_tr:
   252     0024                     	ds	2
   253     0001                     _TMR0           set	1
   254     0006                     _PORTB          set	6
   255     0007                     _PORTC          set	7
   256     0008                     _PORTD          set	8
   257     0081                     _OPTION_REGbits set	129
   258     0088                     _TRISD          set	136
   259     0087                     _TRISC          set	135
   260     0086                     _TRISB          set	134
   261                           
   262                           	psect	cinit
   263     07FC                     start_initialization:	
   264                           ; #config settings
   265                           
   266     07FC                     __initialization:
   267     07FC                     end_of_initialization:	
   268                           ;End of C runtime variable initialization code
   269                           
   270     07FC                     __end_of__initialization:
   271     07FC  0183               	clrf	3
   272     07FD  120A  118A  2E64   	ljmp	_main	;jump to C main() function
   273                           
   274                           	psect	cstackCOMMON
   275     0070                     __pcstackCOMMON:
   276     0070                     ?_giaima_3so_xvn:
   277     0070                     ?_hienthi_3so_3port:	
   278                           ; 1 bytes @ 0x0
   279                           
   280     0070                     ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0070                     ?___awdiv:	
   284                           ; 1 bytes @ 0x0
   285                           
   286     0070                     ___awdiv@divisor:	
   287                           ; 2 bytes @ 0x0
   288                           
   289     0070                     ??_hienthi_3so_3port:	
   290                           ; 2 bytes @ 0x0
   291                           
   292                           
   293                           ; 1 bytes @ 0x0
   294     0070                     	ds	2
   295     0072                     ___awdiv@dividend:
   296                           
   297                           ; 2 bytes @ 0x2
   298     0072                     	ds	2
   299     0074                     ___awdiv@counter:
   300     0074                     ??___awdiv:	
   301                           ; 1 bytes @ 0x4
   302                           
   303                           
   304                           ; 1 bytes @ 0x4
   305     0074                     	ds	1
   306     0075                     ___awdiv@sign:
   307                           
   308                           ; 1 bytes @ 0x5
   309     0075                     	ds	1
   310     0076                     ___awdiv@quotient:
   311                           
   312                           ; 2 bytes @ 0x6
   313     0076                     	ds	2
   314     0078                     ?___awmod:
   315     0078                     ___awmod@divisor:	
   316                           ; 2 bytes @ 0x8
   317                           
   318                           
   319                           ; 2 bytes @ 0x8
   320     0078                     	ds	2
   321     007A                     ___awmod@dividend:
   322                           
   323                           ; 2 bytes @ 0xA
   324     007A                     	ds	2
   325     007C                     ___awmod@counter:
   326     007C                     ??___awmod:	
   327                           ; 1 bytes @ 0xC
   328                           
   329                           
   330                           ; 1 bytes @ 0xC
   331     007C                     	ds	1
   332     007D                     ___awmod@sign:
   333                           
   334                           ; 1 bytes @ 0xD
   335     007D                     	ds	1
   336     007E                     ??_main:
   337                           
   338                           	psect	cstackBANK0
   339     0026                     __pcstackBANK0:	
   340                           ; 1 bytes @ 0xE
   341                           
   342     0026                     ??_giaima_3so_xvn:
   343                           
   344                           ; 1 bytes @ 0x0
   345     0026                     	ds	4
   346     002A                     giaima_3so_xvn@x:
   347                           
   348                           ; 1 bytes @ 0x4
   349     002A                     	ds	1
   350                           
   351                           	psect	maintext
   352     0664                     __pmaintext:	
   353 ;;
   354 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   355 ;;
   356 ;; *************** function _main *****************
   357 ;; Defined at:
   358 ;;		line 41 in file "611.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : B00/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels required when called: 2
   378 ;; This function calls:
   379 ;;		_giaima_3so_xvn
   380 ;;		_hienthi_3so_3port
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386     0664                     _main:	
   387                           ;psect for function _main
   388                           
   389     0664                     l790:	
   390                           ;incstack = 0
   391                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   392                           
   393     0664  1683               	bsf	3,5	;RP0=1, select bank1
   394     0665  1303               	bcf	3,6	;RP1=0, select bank1
   395     0666  0186               	clrf	6	;volatile
   396     0667  0187               	clrf	7	;volatile
   397     0668  0188               	clrf	8	;volatile
   398     0669                     l792:
   399     0669  30FF               	movlw	255
   400     066A  1283               	bcf	3,5	;RP0=0, select bank0
   401     066B  1303               	bcf	3,6	;RP1=0, select bank0
   402     066C  0086               	movwf	6	;volatile
   403     066D                     l794:
   404     066D  30FF               	movlw	255
   405     066E  0087               	movwf	7	;volatile
   406     066F                     l796:
   407     066F  30FF               	movlw	255
   408     0670  0088               	movwf	8	;volatile
   409     0671                     l798:
   410     0671  1683               	bsf	3,5	;RP0=1, select bank1
   411     0672  1303               	bcf	3,6	;RP1=0, select bank1
   412     0673  1681               	bsf	1,5	;volatile
   413     0674                     l800:
   414     0674  1201               	bcf	1,4	;volatile
   415     0675                     l802:
   416     0675  1581               	bsf	1,3	;volatile
   417     0676  1283               	bcf	3,5	;RP0=0, select bank0
   418     0677  1303               	bcf	3,6	;RP1=0, select bank0
   419     0678  0181               	clrf	1	;volatile
   420     0679                     l804:
   421     0679  1283               	bcf	3,5	;RP0=0, select bank0
   422     067A  1303               	bcf	3,6	;RP1=0, select bank0
   423     067B  0801               	movf	1,w	;volatile
   424     067C  120A  118A  2744  120A  118A  	fcall	_giaima_3so_xvn
   425     0681                     l806:
   426     0681  120A  118A  265B  120A  118A  	fcall	_hienthi_3so_3port
   427     0686  2E79               	goto	l804
   428     0687  120A  118A  2800   	ljmp	start
   429     068A                     __end_of_main:
   430                           
   431                           	psect	text1
   432     065B                     __ptext1:	
   433 ;; *************** function _hienthi_3so_3port *****************
   434 ;; Defined at:
   435 ;;		line 36 in file "611.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462     065B                     _hienthi_3so_3port:	
   463                           ;psect for function _hienthi_3so_3port
   464                           
   465     065B                     l788:	
   466                           ;incstack = 0
   467                           ; Regs used in _hienthi_3so_3port: [wreg]
   468                           
   469     065B  1283               	bcf	3,5	;RP0=0, select bank0
   470     065C  1303               	bcf	3,6	;RP1=0, select bank0
   471     065D  0820               	movf	_ma_dv,w
   472     065E  0088               	movwf	8	;volatile
   473     065F  0822               	movf	_ma_ch,w
   474     0660  0087               	movwf	7	;volatile
   475     0661  0824               	movf	_ma_tr,w
   476     0662  0086               	movwf	6	;volatile
   477     0663                     l32:
   478     0663  0008               	return
   479     0664                     __end_of_hienthi_3so_3port:
   480                           
   481                           	psect	text2
   482     0744                     __ptext2:	
   483 ;; *************** function _giaima_3so_xvn *****************
   484 ;; Defined at:
   485 ;;		line 26 in file "611.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;  x               1    wreg     unsigned char 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  x               1    4[BANK0 ] unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         0       1       0       0       0
   501 ;;      Temps:          0       4       0       0       0
   502 ;;      Totals:         0       5       0       0       0
   503 ;;Total ram usage:        5 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 1
   506 ;; This function calls:
   507 ;;		___awdiv
   508 ;;		___awmod
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514     0744                     _giaima_3so_xvn:	
   515                           ;psect for function _giaima_3so_xvn
   516                           
   517                           
   518                           ;incstack = 0
   519                           ; Regs used in _giaima_3so_xvn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   520                           ;giaima_3so_xvn@x stored from wreg
   521     0744  1283               	bcf	3,5	;RP0=0, select bank0
   522     0745  1303               	bcf	3,6	;RP1=0, select bank0
   523     0746  00AA               	movwf	giaima_3so_xvn@x
   524     0747                     l778:
   525     0747  300A               	movlw	10
   526     0748  00F8               	movwf	___awmod@divisor
   527     0749  3000               	movlw	0
   528     074A  00F9               	movwf	___awmod@divisor+1
   529     074B  082A               	movf	giaima_3so_xvn@x,w
   530     074C  00A6               	movwf	??_giaima_3so_xvn
   531     074D  01A7               	clrf	??_giaima_3so_xvn+1
   532     074E  0826               	movf	??_giaima_3so_xvn,w
   533     074F  00FA               	movwf	___awmod@dividend
   534     0750  0827               	movf	??_giaima_3so_xvn+1,w
   535     0751  00FB               	movwf	___awmod@dividend+1
   536     0752  120A  118A  268A  120A  118A  	fcall	___awmod
   537     0757  0878               	movf	?___awmod,w
   538     0758  3E01               	addlw	low ((_ma7doan-__stringbase)| (0+32768))
   539     0759  0084               	movwf	4
   540     075A  120A  118A  2003  120A  118A  	fcall	stringdir
   541     075F  1283               	bcf	3,5	;RP0=0, select bank0
   542     0760  1303               	bcf	3,6	;RP1=0, select bank0
   543     0761  00A8               	movwf	??_giaima_3so_xvn+2
   544     0762  01A9               	clrf	??_giaima_3so_xvn+3
   545     0763  0828               	movf	??_giaima_3so_xvn+2,w
   546     0764  00A0               	movwf	_ma_dv
   547     0765  0829               	movf	??_giaima_3so_xvn+3,w
   548     0766  00A1               	movwf	_ma_dv+1
   549     0767  300A               	movlw	10
   550     0768  00F8               	movwf	___awmod@divisor
   551     0769  3000               	movlw	0
   552     076A  00F9               	movwf	___awmod@divisor+1
   553     076B  300A               	movlw	10
   554     076C  00F0               	movwf	___awdiv@divisor
   555     076D  3000               	movlw	0
   556     076E  00F1               	movwf	___awdiv@divisor+1
   557     076F  082A               	movf	giaima_3so_xvn@x,w
   558     0770  00A6               	movwf	??_giaima_3so_xvn
   559     0771  01A7               	clrf	??_giaima_3so_xvn+1
   560     0772  0826               	movf	??_giaima_3so_xvn,w
   561     0773  00F2               	movwf	___awdiv@dividend
   562     0774  0827               	movf	??_giaima_3so_xvn+1,w
   563     0775  00F3               	movwf	___awdiv@dividend+1
   564     0776  120A  118A  26E1  120A  118A  	fcall	___awdiv
   565     077B  0871               	movf	?___awdiv+1,w
   566     077C  00FB               	movwf	___awmod@dividend+1
   567     077D  0870               	movf	?___awdiv,w
   568     077E  00FA               	movwf	___awmod@dividend
   569     077F  120A  118A  268A  120A  118A  	fcall	___awmod
   570     0784  0878               	movf	?___awmod,w
   571     0785  3E01               	addlw	low ((_ma7doan-__stringbase)| (0+32768))
   572     0786  0084               	movwf	4
   573     0787  120A  118A  2003  120A  118A  	fcall	stringdir
   574     078C  1283               	bcf	3,5	;RP0=0, select bank0
   575     078D  1303               	bcf	3,6	;RP1=0, select bank0
   576     078E  00A8               	movwf	??_giaima_3so_xvn+2
   577     078F  01A9               	clrf	??_giaima_3so_xvn+3
   578     0790  0828               	movf	??_giaima_3so_xvn+2,w
   579     0791  00A2               	movwf	_ma_ch
   580     0792  0829               	movf	??_giaima_3so_xvn+3,w
   581     0793  00A3               	movwf	_ma_ch+1
   582     0794  300A               	movlw	10
   583     0795  00F8               	movwf	___awmod@divisor
   584     0796  3000               	movlw	0
   585     0797  00F9               	movwf	___awmod@divisor+1
   586     0798  3064               	movlw	100
   587     0799  00F0               	movwf	___awdiv@divisor
   588     079A  3000               	movlw	0
   589     079B  00F1               	movwf	___awdiv@divisor+1
   590     079C  082A               	movf	giaima_3so_xvn@x,w
   591     079D  00A6               	movwf	??_giaima_3so_xvn
   592     079E  01A7               	clrf	??_giaima_3so_xvn+1
   593     079F  0826               	movf	??_giaima_3so_xvn,w
   594     07A0  00F2               	movwf	___awdiv@dividend
   595     07A1  0827               	movf	??_giaima_3so_xvn+1,w
   596     07A2  00F3               	movwf	___awdiv@dividend+1
   597     07A3  120A  118A  26E1  120A  118A  	fcall	___awdiv
   598     07A8  0871               	movf	?___awdiv+1,w
   599     07A9  00FB               	movwf	___awmod@dividend+1
   600     07AA  0870               	movf	?___awdiv,w
   601     07AB  00FA               	movwf	___awmod@dividend
   602     07AC  120A  118A  268A  120A  118A  	fcall	___awmod
   603     07B1  0878               	movf	?___awmod,w
   604     07B2  3E01               	addlw	low ((_ma7doan-__stringbase)| (0+32768))
   605     07B3  0084               	movwf	4
   606     07B4  120A  118A  2003  120A  118A  	fcall	stringdir
   607     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   608     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   609     07BB  00A8               	movwf	??_giaima_3so_xvn+2
   610     07BC  01A9               	clrf	??_giaima_3so_xvn+3
   611     07BD  0828               	movf	??_giaima_3so_xvn+2,w
   612     07BE  00A4               	movwf	_ma_tr
   613     07BF  0829               	movf	??_giaima_3so_xvn+3,w
   614     07C0  00A5               	movwf	_ma_tr+1
   615     07C1                     l780:
   616     07C1  3064               	movlw	100
   617     07C2  00F0               	movwf	___awdiv@divisor
   618     07C3  3000               	movlw	0
   619     07C4  00F1               	movwf	___awdiv@divisor+1
   620     07C5  082A               	movf	giaima_3so_xvn@x,w
   621     07C6  00A6               	movwf	??_giaima_3so_xvn
   622     07C7  01A7               	clrf	??_giaima_3so_xvn+1
   623     07C8  0826               	movf	??_giaima_3so_xvn,w
   624     07C9  00F2               	movwf	___awdiv@dividend
   625     07CA  0827               	movf	??_giaima_3so_xvn+1,w
   626     07CB  00F3               	movwf	___awdiv@dividend+1
   627     07CC  120A  118A  26E1  120A  118A  	fcall	___awdiv
   628     07D1  0870               	movf	?___awdiv,w
   629     07D2  0471               	iorwf	?___awdiv+1,w
   630     07D3  1D03               	btfss	3,2
   631     07D4  2FD6               	goto	u411
   632     07D5  2FD7               	goto	u410
   633     07D6                     u411:
   634     07D6  2FDD               	goto	l784
   635     07D7                     u410:
   636     07D7                     l782:
   637     07D7  30FF               	movlw	255
   638     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   639     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   640     07DA  00A4               	movwf	_ma_tr
   641     07DB  3000               	movlw	0
   642     07DC  00A5               	movwf	_ma_tr+1
   643     07DD                     l784:
   644     07DD  300A               	movlw	10
   645     07DE  00F0               	movwf	___awdiv@divisor
   646     07DF  3000               	movlw	0
   647     07E0  00F1               	movwf	___awdiv@divisor+1
   648     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   649     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   650     07E3  082A               	movf	giaima_3so_xvn@x,w
   651     07E4  00A6               	movwf	??_giaima_3so_xvn
   652     07E5  01A7               	clrf	??_giaima_3so_xvn+1
   653     07E6  0826               	movf	??_giaima_3so_xvn,w
   654     07E7  00F2               	movwf	___awdiv@dividend
   655     07E8  0827               	movf	??_giaima_3so_xvn+1,w
   656     07E9  00F3               	movwf	___awdiv@dividend+1
   657     07EA  120A  118A  26E1  120A  118A  	fcall	___awdiv
   658     07EF  0870               	movf	?___awdiv,w
   659     07F0  0471               	iorwf	?___awdiv+1,w
   660     07F1  1D03               	btfss	3,2
   661     07F2  2FF4               	goto	u421
   662     07F3  2FF5               	goto	u420
   663     07F4                     u421:
   664     07F4  2FFB               	goto	l29
   665     07F5                     u420:
   666     07F5                     l786:
   667     07F5  30FF               	movlw	255
   668     07F6  1283               	bcf	3,5	;RP0=0, select bank0
   669     07F7  1303               	bcf	3,6	;RP1=0, select bank0
   670     07F8  00A2               	movwf	_ma_ch
   671     07F9  3000               	movlw	0
   672     07FA  00A3               	movwf	_ma_ch+1
   673     07FB                     l29:
   674     07FB  0008               	return
   675     07FC                     __end_of_giaima_3so_xvn:
   676                           
   677                           	psect	text3
   678     068A                     __ptext3:	
   679 ;; *************** function ___awmod *****************
   680 ;; Defined at:
   681 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  divisor         2    8[COMMON] int 
   684 ;;  dividend        2   10[COMMON] int 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  sign            1   13[COMMON] unsigned char 
   687 ;;  counter         1   12[COMMON] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  2    8[COMMON] int 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         4       0       0       0       0
   698 ;;      Locals:         2       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         6       0       0       0       0
   701 ;;Total ram usage:        6 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_giaima_3so_xvn
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710     068A                     ___awmod:	
   711                           ;psect for function ___awmod
   712                           
   713     068A                     l740:	
   714                           ;incstack = 0
   715                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   716                           
   717     068A  01FD               	clrf	___awmod@sign
   718     068B                     l742:
   719     068B  1FFB               	btfss	___awmod@dividend+1,7
   720     068C  2E8E               	goto	u321
   721     068D  2E8F               	goto	u320
   722     068E                     u321:
   723     068E  2E96               	goto	l748
   724     068F                     u320:
   725     068F                     l744:
   726     068F  09FA               	comf	___awmod@dividend,f
   727     0690  09FB               	comf	___awmod@dividend+1,f
   728     0691  0AFA               	incf	___awmod@dividend,f
   729     0692  1903               	skipnz
   730     0693  0AFB               	incf	___awmod@dividend+1,f
   731     0694                     l746:
   732     0694  3001               	movlw	1
   733     0695  00FD               	movwf	___awmod@sign
   734     0696                     l748:
   735     0696  1FF9               	btfss	___awmod@divisor+1,7
   736     0697  2E99               	goto	u331
   737     0698  2E9A               	goto	u330
   738     0699                     u331:
   739     0699  2E9F               	goto	l752
   740     069A                     u330:
   741     069A                     l750:
   742     069A  09F8               	comf	___awmod@divisor,f
   743     069B  09F9               	comf	___awmod@divisor+1,f
   744     069C  0AF8               	incf	___awmod@divisor,f
   745     069D  1903               	skipnz
   746     069E  0AF9               	incf	___awmod@divisor+1,f
   747     069F                     l752:
   748     069F  0878               	movf	___awmod@divisor,w
   749     06A0  0479               	iorwf	___awmod@divisor+1,w
   750     06A1  1903               	btfsc	3,2
   751     06A2  2EA4               	goto	u341
   752     06A3  2EA5               	goto	u340
   753     06A4                     u341:
   754     06A4  2ED2               	goto	l770
   755     06A5                     u340:
   756     06A5                     l754:
   757     06A5  3001               	movlw	1
   758     06A6  00FC               	movwf	___awmod@counter
   759     06A7  2EB1               	goto	l760
   760     06A8                     l756:
   761     06A8  3001               	movlw	1
   762     06A9                     u355:
   763     06A9  1003               	clrc
   764     06AA  0DF8               	rlf	___awmod@divisor,f
   765     06AB  0DF9               	rlf	___awmod@divisor+1,f
   766     06AC  3EFF               	addlw	-1
   767     06AD  1D03               	skipz
   768     06AE  2EA9               	goto	u355
   769     06AF                     l758:
   770     06AF  3001               	movlw	1
   771     06B0  07FC               	addwf	___awmod@counter,f
   772     06B1                     l760:
   773     06B1  1FF9               	btfss	___awmod@divisor+1,7
   774     06B2  2EB4               	goto	u361
   775     06B3  2EB5               	goto	u360
   776     06B4                     u361:
   777     06B4  2EA8               	goto	l756
   778     06B5                     u360:
   779     06B5                     l762:
   780     06B5  0879               	movf	___awmod@divisor+1,w
   781     06B6  027B               	subwf	___awmod@dividend+1,w
   782     06B7  1D03               	skipz
   783     06B8  2EBB               	goto	u375
   784     06B9  0878               	movf	___awmod@divisor,w
   785     06BA  027A               	subwf	___awmod@dividend,w
   786     06BB                     u375:
   787     06BB  1C03               	skipc
   788     06BC  2EBE               	goto	u371
   789     06BD  2EBF               	goto	u370
   790     06BE                     u371:
   791     06BE  2EC5               	goto	l766
   792     06BF                     u370:
   793     06BF                     l764:
   794     06BF  0878               	movf	___awmod@divisor,w
   795     06C0  02FA               	subwf	___awmod@dividend,f
   796     06C1  0879               	movf	___awmod@divisor+1,w
   797     06C2  1C03               	skipc
   798     06C3  03FB               	decf	___awmod@dividend+1,f
   799     06C4  02FB               	subwf	___awmod@dividend+1,f
   800     06C5                     l766:
   801     06C5  3001               	movlw	1
   802     06C6                     u385:
   803     06C6  1003               	clrc
   804     06C7  0CF9               	rrf	___awmod@divisor+1,f
   805     06C8  0CF8               	rrf	___awmod@divisor,f
   806     06C9  3EFF               	addlw	-1
   807     06CA  1D03               	skipz
   808     06CB  2EC6               	goto	u385
   809     06CC                     l768:
   810     06CC  3001               	movlw	1
   811     06CD  02FC               	subwf	___awmod@counter,f
   812     06CE  1D03               	btfss	3,2
   813     06CF  2ED1               	goto	u391
   814     06D0  2ED2               	goto	u390
   815     06D1                     u391:
   816     06D1  2EB5               	goto	l762
   817     06D2                     u390:
   818     06D2                     l770:
   819     06D2  087D               	movf	___awmod@sign,w
   820     06D3  1903               	btfsc	3,2
   821     06D4  2ED6               	goto	u401
   822     06D5  2ED7               	goto	u400
   823     06D6                     u401:
   824     06D6  2EDC               	goto	l774
   825     06D7                     u400:
   826     06D7                     l772:
   827     06D7  09FA               	comf	___awmod@dividend,f
   828     06D8  09FB               	comf	___awmod@dividend+1,f
   829     06D9  0AFA               	incf	___awmod@dividend,f
   830     06DA  1903               	skipnz
   831     06DB  0AFB               	incf	___awmod@dividend+1,f
   832     06DC                     l774:
   833     06DC  087B               	movf	___awmod@dividend+1,w
   834     06DD  00F9               	movwf	?___awmod+1
   835     06DE  087A               	movf	___awmod@dividend,w
   836     06DF  00F8               	movwf	?___awmod
   837     06E0                     l292:
   838     06E0  0008               	return
   839     06E1                     __end_of___awmod:
   840                           
   841                           	psect	text4
   842     06E1                     __ptext4:	
   843 ;; *************** function ___awdiv *****************
   844 ;; Defined at:
   845 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  divisor         2    0[COMMON] int 
   848 ;;  dividend        2    2[COMMON] int 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  quotient        2    6[COMMON] int 
   851 ;;  sign            1    5[COMMON] unsigned char 
   852 ;;  counter         1    4[COMMON] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  2    0[COMMON] int 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         4       0       0       0       0
   863 ;;      Locals:         4       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0
   865 ;;      Totals:         8       0       0       0       0
   866 ;;Total ram usage:        8 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_giaima_3so_xvn
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875     06E1                     ___awdiv:	
   876                           ;psect for function ___awdiv
   877                           
   878     06E1                     l696:	
   879                           ;incstack = 0
   880                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   881                           
   882     06E1  01F5               	clrf	___awdiv@sign
   883     06E2                     l698:
   884     06E2  1FF1               	btfss	___awdiv@divisor+1,7
   885     06E3  2EE5               	goto	u221
   886     06E4  2EE6               	goto	u220
   887     06E5                     u221:
   888     06E5  2EED               	goto	l704
   889     06E6                     u220:
   890     06E6                     l700:
   891     06E6  09F0               	comf	___awdiv@divisor,f
   892     06E7  09F1               	comf	___awdiv@divisor+1,f
   893     06E8  0AF0               	incf	___awdiv@divisor,f
   894     06E9  1903               	skipnz
   895     06EA  0AF1               	incf	___awdiv@divisor+1,f
   896     06EB                     l702:
   897     06EB  3001               	movlw	1
   898     06EC  00F5               	movwf	___awdiv@sign
   899     06ED                     l704:
   900     06ED  1FF3               	btfss	___awdiv@dividend+1,7
   901     06EE  2EF0               	goto	u231
   902     06EF  2EF1               	goto	u230
   903     06F0                     u231:
   904     06F0  2EF8               	goto	l710
   905     06F1                     u230:
   906     06F1                     l706:
   907     06F1  09F2               	comf	___awdiv@dividend,f
   908     06F2  09F3               	comf	___awdiv@dividend+1,f
   909     06F3  0AF2               	incf	___awdiv@dividend,f
   910     06F4  1903               	skipnz
   911     06F5  0AF3               	incf	___awdiv@dividend+1,f
   912     06F6                     l708:
   913     06F6  3001               	movlw	1
   914     06F7  06F5               	xorwf	___awdiv@sign,f
   915     06F8                     l710:
   916     06F8  01F6               	clrf	___awdiv@quotient
   917     06F9  01F7               	clrf	___awdiv@quotient+1
   918     06FA                     l712:
   919     06FA  0870               	movf	___awdiv@divisor,w
   920     06FB  0471               	iorwf	___awdiv@divisor+1,w
   921     06FC  1903               	btfsc	3,2
   922     06FD  2EFF               	goto	u241
   923     06FE  2F00               	goto	u240
   924     06FF                     u241:
   925     06FF  2F35               	goto	l732
   926     0700                     u240:
   927     0700                     l714:
   928     0700  3001               	movlw	1
   929     0701  00F4               	movwf	___awdiv@counter
   930     0702  2F0C               	goto	l720
   931     0703                     l716:
   932     0703  3001               	movlw	1
   933     0704                     u255:
   934     0704  1003               	clrc
   935     0705  0DF0               	rlf	___awdiv@divisor,f
   936     0706  0DF1               	rlf	___awdiv@divisor+1,f
   937     0707  3EFF               	addlw	-1
   938     0708  1D03               	skipz
   939     0709  2F04               	goto	u255
   940     070A                     l718:
   941     070A  3001               	movlw	1
   942     070B  07F4               	addwf	___awdiv@counter,f
   943     070C                     l720:
   944     070C  1FF1               	btfss	___awdiv@divisor+1,7
   945     070D  2F0F               	goto	u261
   946     070E  2F10               	goto	u260
   947     070F                     u261:
   948     070F  2F03               	goto	l716
   949     0710                     u260:
   950     0710                     l722:
   951     0710  3001               	movlw	1
   952     0711                     u275:
   953     0711  1003               	clrc
   954     0712  0DF6               	rlf	___awdiv@quotient,f
   955     0713  0DF7               	rlf	___awdiv@quotient+1,f
   956     0714  3EFF               	addlw	-1
   957     0715  1D03               	skipz
   958     0716  2F11               	goto	u275
   959     0717  0871               	movf	___awdiv@divisor+1,w
   960     0718  0273               	subwf	___awdiv@dividend+1,w
   961     0719  1D03               	skipz
   962     071A  2F1D               	goto	u285
   963     071B  0870               	movf	___awdiv@divisor,w
   964     071C  0272               	subwf	___awdiv@dividend,w
   965     071D                     u285:
   966     071D  1C03               	skipc
   967     071E  2F20               	goto	u281
   968     071F  2F21               	goto	u280
   969     0720                     u281:
   970     0720  2F28               	goto	l728
   971     0721                     u280:
   972     0721                     l724:
   973     0721  0870               	movf	___awdiv@divisor,w
   974     0722  02F2               	subwf	___awdiv@dividend,f
   975     0723  0871               	movf	___awdiv@divisor+1,w
   976     0724  1C03               	skipc
   977     0725  03F3               	decf	___awdiv@dividend+1,f
   978     0726  02F3               	subwf	___awdiv@dividend+1,f
   979     0727                     l726:
   980     0727  1476               	bsf	___awdiv@quotient,0
   981     0728                     l728:
   982     0728  3001               	movlw	1
   983     0729                     u295:
   984     0729  1003               	clrc
   985     072A  0CF1               	rrf	___awdiv@divisor+1,f
   986     072B  0CF0               	rrf	___awdiv@divisor,f
   987     072C  3EFF               	addlw	-1
   988     072D  1D03               	skipz
   989     072E  2F29               	goto	u295
   990     072F                     l730:
   991     072F  3001               	movlw	1
   992     0730  02F4               	subwf	___awdiv@counter,f
   993     0731  1D03               	btfss	3,2
   994     0732  2F34               	goto	u301
   995     0733  2F35               	goto	u300
   996     0734                     u301:
   997     0734  2F10               	goto	l722
   998     0735                     u300:
   999     0735                     l732:
  1000     0735  0875               	movf	___awdiv@sign,w
  1001     0736  1903               	btfsc	3,2
  1002     0737  2F39               	goto	u311
  1003     0738  2F3A               	goto	u310
  1004     0739                     u311:
  1005     0739  2F3F               	goto	l736
  1006     073A                     u310:
  1007     073A                     l734:
  1008     073A  09F6               	comf	___awdiv@quotient,f
  1009     073B  09F7               	comf	___awdiv@quotient+1,f
  1010     073C  0AF6               	incf	___awdiv@quotient,f
  1011     073D  1903               	skipnz
  1012     073E  0AF7               	incf	___awdiv@quotient+1,f
  1013     073F                     l736:
  1014     073F  0877               	movf	___awdiv@quotient+1,w
  1015     0740  00F1               	movwf	?___awdiv+1
  1016     0741  0876               	movf	___awdiv@quotient,w
  1017     0742  00F0               	movwf	?___awdiv
  1018     0743                     l279:
  1019     0743  0008               	return
  1020     0744                     __end_of___awdiv:
  1021     0002                     ___latbits      equ	2
  1022     007E                     btemp           set	126	;btemp
  1023     007E                     wtemp0          set	126
  1024                           
  1025                           	psect	config
  1026                           
  1027                           ;Config register CONFIG1 @ 0x2007
  1028                           ;	Oscillator Selection bits
  1029                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1030                           ;	Watchdog Timer Enable bit
  1031                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1032                           ;	Power-up Timer Enable bit
  1033                           ;	PWRTE = OFF, PWRT disabled
  1034                           ;	RE3/MCLR pin function select bit
  1035                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1036                           ;	Code Protection bit
  1037                           ;	CP = OFF, Program memory code protection is disabled
  1038                           ;	Data Code Protection bit
  1039                           ;	CPD = OFF, Data memory code protection is disabled
  1040                           ;	Brown Out Reset Selection bits
  1041                           ;	BOREN = OFF, BOR disabled
  1042                           ;	Internal External Switchover bit
  1043                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1044                           ;	Fail-Safe Clock Monitor Enabled bit
  1045                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1046                           ;	Low Voltage Programming Enable bit
  1047                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1048                           ;	In-Circuit Debugger Mode bit
  1049                           ;	DEBUG = 0x1, unprogrammed default
  1050     2007                     	org	8199
  1051     2007  20F2               	dw	8434
  1052                           
  1053                           ;Config register CONFIG2 @ 0x2008
  1054                           ;	Brown-out Reset Selection bit
  1055                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1056                           ;	Flash Program Memory Self Write Enable bits
  1057                           ;	WRT = OFF, Write protection off
  1058     2008                     	org	8200
  1059     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      5      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _giaima_3so_xvn->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    _main->_giaima_3so_xvn

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     755
                     _giaima_3so_xvn
                  _hienthi_3so_3port
 ---------------------------------------------------------------------------------
 (1) _hienthi_3so_3port                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _giaima_3so_xvn                                       5     5      0     755
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     302
                                              8 COMMON     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     308
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _giaima_3so_xvn
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _hienthi_3so_3port

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      5      11     13.8%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      25      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Sep 30 23:18:14 2025

                        pc 0002                         l32 0663                         l29 07FB  
             ___awdiv@sign 0075                         fsr 0004                        l700 06E6  
                      l292 06E0                        l710 06F8                        l702 06EB  
                      l279 0743                        l720 070C                        l712 06FA  
                      l704 06ED                        l800 0674                        l730 072F  
                      l722 0710                        l714 0700                        l706 06F1  
                      l802 0675                        l724 0721                        l716 0703  
                      l732 0735                        l708 06F6                        l740 068A  
                      l804 0679                        l734 073A                        l726 0727  
                      l718 070A                        l750 069A                        l742 068B  
                      l806 0681                        l736 073F                        l728 0728  
                      l760 06B1                        l752 069F                        l744 068F  
                      l762 06B5                        l754 06A5                        l770 06D2  
                      l746 0694                        l772 06D7                        l764 06BF  
                      l756 06A8                        l748 0696                        l780 07C1  
                      l774 06DC                        l766 06C5                        l758 06AF  
                      l782 07D7                        l790 0664                        l696 06E1  
                      l768 06CC                        l784 07DD                        l792 0669  
                      l698 06E2                        l786 07F5                        l778 0747  
                      l794 066D                        l788 065B                        l796 066F  
                      l798 0671                        u300 0735                        u220 06E6  
                      u301 0734                        u221 06E5                        u310 073A  
                      u230 06F1                        u311 0739                        u231 06F0  
                      u240 0700                        u400 06D7                        u320 068F  
                      u241 06FF                        u401 06D6                        u321 068E  
                      u330 069A                        u410 07D7                        u331 0699  
                      u411 07D6                        u260 0710                        u340 06A5  
                      u420 07F5                        u261 070F                        u341 06A4  
                      u421 07F4                        u255 0704                        u280 0721  
                      u360 06B5                        u281 0720                        u361 06B4  
                      u370 06BF                        u275 0711                        u371 06BE  
                      u355 06A9                        u285 071D                        u390 06D2  
                      u295 0729                        u391 06D1                        u375 06BB  
                      u385 06C6                        fsr0 0004               ___awmod@sign 007D  
                     _TMR0 0001                       _main 0664                       btemp 007E  
                     start 0000                      ?_main 0070            __end_of___awdiv 0744  
          __end_of___awmod 06E1            ___awdiv@divisor 0070            __end_of_ma7doan 0013  
          ___awdiv@counter 0074                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _ma_ch 0022                      _ma_dv 0020  
                    _ma_tr 0024                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 07FC               __end_of_main 068A  
                   ??_main 007E           ___awdiv@dividend 0072                  ??___awdiv 0074  
                ??___awmod 007C           ___awdiv@quotient 0076            ___awmod@divisor 0078  
          ___awmod@counter 007C    __end_of__initialization 07FC          _hienthi_3so_3port 065B  
           __pcstackCOMMON 0070         ?_hienthi_3so_3port 0070        ??_hienthi_3so_3port 0070  
           _OPTION_REGbits 0081            giaima_3so_xvn@x 002A  __end_of_hienthi_3so_3port 0664  
               __pmaintext 0664                 __stringtab 0003                    ___awdiv 06E1  
                  ___awmod 068A                    _ma7doan 0009                    __ptext1 065B  
                  __ptext2 0744                    __ptext3 068A                    __ptext4 06E1  
         ___awmod@dividend 007A       end_of_initialization 07FC             _giaima_3so_xvn 0744  
      start_initialization 07FC     __end_of_giaima_3so_xvn 07FC                  ___latbits 0002  
            __pcstackBANK0 0026                  __pnvBANK0 0020                   ?___awdiv 0070  
                 ?___awmod 0078            ?_giaima_3so_xvn 0070                  __pstrings 0003  
              __stringbase 0008         __end_of__stringtab 0009                  stringcode 0003  
         ??_giaima_3so_xvn 0026                   stringdir 0003                   stringtab 0003  
